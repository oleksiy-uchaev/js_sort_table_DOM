{"version":3,"sources":["scripts/main.js"],"names":["tableHead","document","querySelector","headTopic","querySelectorAll","map","i","innerText","tableBody","rows","addEventListener","e","sorted","target","closest","cellNum","indexOf","sort","a","b","cell","localeCompare","appendChild","row","n","children","textContent","replace"],"mappings":";AAAA,aAwBA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAtBA,IAAMA,EAAYC,SAASC,cAAc,SACnCC,EAAY,EAAIF,SAASG,iBAAiB,aAC7CC,IAAI,SAAAC,GAAKA,OAAAA,EAAEC,YAERC,EAAYP,SAASC,cAAc,SACnCO,EAAWD,EAAAA,EAAUJ,iBAAiB,OAE5CJ,EAAUU,iBAAiB,QAAS,SAACC,GAC/BC,IACEC,EAASF,EAAEE,OAAOC,QAAQ,MAAMP,UAChCQ,EAAUZ,EAAUa,QAAQH,IAE9BE,GAAW,EACJN,EAAKQ,KAAK,SAACC,EAAGC,GACrBC,OAAAA,EAAKF,EAAGH,GAAYK,EAAKD,EAAGJ,KAErBN,EAAKQ,KAAK,SAACC,EAAGC,GACrBC,OAAAA,EAAKF,EAAGH,GAASM,cAAcD,EAAKD,EAAGJ,OAEpCV,IAAI,SAAAC,GAAKE,OAAAA,EAAUc,YAAYhB,OAGxC,IAAMc,EAAO,SAACG,EAAKC,GAAMD,OAAAA,EAAIE,SAASD,GACnCE,YAAYC,QAAQ,QAAS","file":"main.689e44af.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst tableHead = document.querySelector('thead');\nconst headTopic = [...document.querySelectorAll('thead th')]\n  .map(i => i.innerText);\n\nconst tableBody = document.querySelector('tbody');\nconst rows = [...tableBody.querySelectorAll('tr')];\n\ntableHead.addEventListener('click', (e) => {\n  let sorted;\n  const target = e.target.closest('th').innerText;\n  const cellNum = headTopic.indexOf(target);\n\n  if (cellNum >= 2) {\n    sorted = rows.sort((a, b) =>\n      cell(a, cellNum) - (cell(b, cellNum)));\n  } else {\n    sorted = rows.sort((a, b) =>\n      cell(a, cellNum).localeCompare(cell(b, cellNum)));\n  };\n  sorted.map(i => tableBody.appendChild(i));\n});\n\nconst cell = (row, n) => row.children[n]\n  .textContent.replace(/[$,]/g, '');\n"]}